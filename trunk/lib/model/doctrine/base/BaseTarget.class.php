<?php

/**
 * BaseTarget
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $sourceId
 * @property integer $languageId
 * @property text $value
 * @property text $note
 * @property Source $Source
 * @property Language $Language
 * 
 * @method integer  getId()         Returns the current record's "id" value
 * @method integer  getSourceId()   Returns the current record's "sourceId" value
 * @method integer  getLanguageId() Returns the current record's "languageId" value
 * @method text     getValue()      Returns the current record's "value" value
 * @method text     getNote()       Returns the current record's "note" value
 * @method Source   getSource()     Returns the current record's "Source" value
 * @method Language getLanguage()   Returns the current record's "Language" value
 * @method Target   setId()         Sets the current record's "id" value
 * @method Target   setSourceId()   Sets the current record's "sourceId" value
 * @method Target   setLanguageId() Sets the current record's "languageId" value
 * @method Target   setValue()      Sets the current record's "value" value
 * @method Target   setNote()       Sets the current record's "note" value
 * @method Target   setSource()     Sets the current record's "Source" value
 * @method Target   setLanguage()   Sets the current record's "Language" value
 * 
 * @package    localizit
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTarget extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_target');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('source_id as sourceId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('language_id as languageId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('value', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('note', 'text', null, array(
             'type' => 'text',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Source', array(
             'local' => 'sourceId',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Language', array(
             'local' => 'languageId',
             'foreign' => 'id'));
    }
}