<?php

/**
 * BaseUserLanguage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $userId
 * @property integer $languageId
 * @property Language $Language
 * @property User $User
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method integer      getUserId()     Returns the current record's "userId" value
 * @method integer      getLanguageId() Returns the current record's "languageId" value
 * @method Language     getLanguage()   Returns the current record's "Language" value
 * @method User         getUser()       Returns the current record's "User" value
 * @method UserLanguage setId()         Sets the current record's "id" value
 * @method UserLanguage setUserId()     Sets the current record's "userId" value
 * @method UserLanguage setLanguageId() Sets the current record's "languageId" value
 * @method UserLanguage setLanguage()   Sets the current record's "Language" value
 * @method UserLanguage setUser()       Sets the current record's "User" value
 * 
 * @package    localizit
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserLanguage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_user_language');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_id as userId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('language_id as languageId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Language', array(
             'local' => 'languageId',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('User', array(
             'local' => 'userId',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}