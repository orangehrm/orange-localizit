<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $login_name
 * @property integer $user_type_id
 * @property string $password
 * @property UserType $UserType
 * @property Doctrine_Collection $UserLanguage
 * 
 * @method integer             getUserId()       Returns the current record's "user_id" value
 * @method string              getLoginName()    Returns the current record's "login_name" value
 * @method integer             getUserTypeId()   Returns the current record's "user_type_id" value
 * @method string              getPassword()     Returns the current record's "password" value
 * @method UserType            getUserType()     Returns the current record's "UserType" value
 * @method Doctrine_Collection getUserLanguage() Returns the current record's "UserLanguage" collection
 * @method User                setUserId()       Sets the current record's "user_id" value
 * @method User                setLoginName()    Sets the current record's "login_name" value
 * @method User                setUserTypeId()   Sets the current record's "user_type_id" value
 * @method User                setPassword()     Sets the current record's "password" value
 * @method User                setUserType()     Sets the current record's "UserType" value
 * @method User                setUserLanguage() Sets the current record's "UserLanguage" collection
 * 
 * @package    localizit
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_user');
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('login_name', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('user_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserType', array(
             'local' => 'user_type_id',
             'foreign' => 'id'));

        $this->hasMany('UserLanguage', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));
    }
}